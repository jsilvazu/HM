imports
{
import CommonTypes
import Type
import Utiles
}

DATA Expr | EInt    i:  {Int}
          | EBool   b:  {Bool}
          | EUnit   u:  {Unit}
          | Var     v:  {HsName}
          | Abs     a:  {HsName}
                    b:  Expr
          | App     e1: Expr
                    e2: Expr
          | Let     x:  {HsName}
                    e1: Expr
                    e2: Expr

-- expresiones Bool
          | IsZero  i:  Expr
          | If      b:  Expr
                    e1: Expr
                    e2: Expr
-- expresiones prod
          | Prod    t1: Expr
                    t2: Expr

          | First   p:  Expr
          | Second  p:  Expr
          | With    v1: {HsName}
                    v2: {HsName}
                    m:  Expr
                    n:  Expr

-- expresiones union
          | InLeft  t:  Type
                    m1: Expr
          | InRight t:  Type
                    m2: Expr

          | IsLeft  p:  Expr
          | IsRight p:  Expr

          | AsLeft  p:  Expr
          | AsRight p:  Expr

          | Case    m:  Expr
                    v1: {HsName}
                    n1: Expr
                    v2: {HsName}
                    n2: Expr

-- expresiones Record
          | Record  e : Recs

          | RecSelec
                    l: {String}
                    v: Expr

          | RecWith v: {[(String,HsName)]} -- Vars
                    m: Expr
                    n: Expr

-- expresiones Var
          | Variant v: {[(String, Type)]}
                    m: Rec

          | Is      e: Expr
                    l: {String}

          | As      e: Expr
                    l: {String}

          | VarCase m: Expr
                    l: Vars


---------------------------------------------------------------------------------------

DATA Rec  | Rec l: {String}
                v: Expr

TYPE Recs = [Rec]

DATA Val  | Val l: {String}
                v: {HsName}
                n: Expr

TYPE Vars = [Val]

---------------------------------------

DATA RootAbs | RootAbs exp : Expr

DERIVING Expr : Show
DERIVING Rec  : Show
DERIVING Val  : Show
